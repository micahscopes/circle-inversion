vec4 rotate(vec4 x, vec4 u, vec4 v, float theta){
    return vec4(-pow(u[0], 2.0)*pow(v[1], 2.0)*x[0]*pow(sin(theta), 2.0) - pow(u[0], 2.0)*pow(v[2], 2.0)*x[0]*pow(sin(theta), 2.0) - pow(u[0], 2.0)*pow(v[3], 2.0)*x[0]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[0]*v[1]*x[0]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[1]*v[2]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[1]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[1]*pow(v[2], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*u[0]*u[1]*pow(v[3], 2.0)*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[0]*v[2]*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*u[2]*pow(v[1], 2.0)*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[1]*v[2]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[2]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[2]*pow(v[3], 2.0)*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[0]*v[3]*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*u[3]*pow(v[1], 2.0)*x[3]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[1]*v[3]*x[1]*pow(sin(theta), 2.0) - 2.0*u[0]*u[3]*pow(v[2], 2.0)*x[3]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[2]*v[3]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*v[1]*x[1]*sin(theta)*cos(theta) + 2.0*u[0]*v[2]*x[2]*sin(theta)*cos(theta) + 2.0*u[0]*v[3]*x[3]*sin(theta)*cos(theta) - pow(u[1], 2.0)*pow(v[0], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*pow(u[1], 2.0)*v[0]*v[2]*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[1], 2.0)*v[0]*v[3]*x[3]*pow(sin(theta), 2.0) + pow(u[1], 2.0)*pow(v[2], 2.0)*x[0]*pow(sin(theta), 2.0) + pow(u[1], 2.0)*pow(v[3], 2.0)*x[0]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[0]*v[1]*x[2]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[0]*v[2]*x[1]*pow(sin(theta), 2.0) - 2.0*u[1]*u[2]*v[1]*v[2]*x[0]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[0]*v[1]*x[3]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[0]*v[3]*x[1]*pow(sin(theta), 2.0) - 2.0*u[1]*u[3]*v[1]*v[3]*x[0]*pow(sin(theta), 2.0) - 2.0*u[1]*v[0]*x[1]*sin(theta)*cos(theta) - pow(u[2], 2.0)*pow(v[0], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*pow(u[2], 2.0)*v[0]*v[1]*x[1]*pow(sin(theta), 2.0) - 2.0*pow(u[2], 2.0)*v[0]*v[3]*x[3]*pow(sin(theta), 2.0) + pow(u[2], 2.0)*pow(v[1], 2.0)*x[0]*pow(sin(theta), 2.0) + pow(u[2], 2.0)*pow(v[3], 2.0)*x[0]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[0]*v[2]*x[3]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[0]*v[3]*x[2]*pow(sin(theta), 2.0) - 2.0*u[2]*u[3]*v[2]*v[3]*x[0]*pow(sin(theta), 2.0) - 2.0*u[2]*v[0]*x[2]*sin(theta)*cos(theta) - pow(u[3], 2.0)*pow(v[0], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*pow(u[3], 2.0)*v[0]*v[1]*x[1]*pow(sin(theta), 2.0) - 2.0*pow(u[3], 2.0)*v[0]*v[2]*x[2]*pow(sin(theta), 2.0) + pow(u[3], 2.0)*pow(v[1], 2.0)*x[0]*pow(sin(theta), 2.0) + pow(u[3], 2.0)*pow(v[2], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*u[3]*v[0]*x[3]*sin(theta)*cos(theta) + x[0]*pow(cos(theta), 2.0), -pow(u[0], 2.0)*pow(v[1], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*pow(u[0], 2.0)*v[1]*v[2]*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[0], 2.0)*v[1]*v[3]*x[3]*pow(sin(theta), 2.0) + pow(u[0], 2.0)*pow(v[2], 2.0)*x[1]*pow(sin(theta), 2.0) + pow(u[0], 2.0)*pow(v[3], 2.0)*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[0]*v[1]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[0]*v[2]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[0]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[1]*pow(v[2], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*u[1]*pow(v[3], 2.0)*x[0]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[0]*v[1]*x[2]*pow(sin(theta), 2.0) - 2.0*u[0]*u[2]*v[0]*v[2]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[1]*v[2]*x[0]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[0]*v[1]*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[3]*v[0]*v[3]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[1]*v[3]*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*v[1]*x[0]*sin(theta)*cos(theta) - pow(u[1], 2.0)*pow(v[0], 2.0)*x[1]*pow(sin(theta), 2.0) - pow(u[1], 2.0)*pow(v[2], 2.0)*x[1]*pow(sin(theta), 2.0) - pow(u[1], 2.0)*pow(v[3], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*u[1]*u[2]*pow(v[0], 2.0)*x[2]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[0]*v[2]*x[0]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[1]*v[2]*x[1]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[2]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[1]*u[2]*pow(v[3], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*u[1]*u[3]*pow(v[0], 2.0)*x[3]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[0]*v[3]*x[0]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[1]*v[3]*x[1]*pow(sin(theta), 2.0) - 2.0*u[1]*u[3]*pow(v[2], 2.0)*x[3]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[2]*v[3]*x[2]*pow(sin(theta), 2.0) + 2.0*u[1]*v[0]*x[0]*sin(theta)*cos(theta) + 2.0*u[1]*v[2]*x[2]*sin(theta)*cos(theta) + 2.0*u[1]*v[3]*x[3]*sin(theta)*cos(theta) + pow(u[2], 2.0)*pow(v[0], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*pow(u[2], 2.0)*v[0]*v[1]*x[0]*pow(sin(theta), 2.0) - pow(u[2], 2.0)*pow(v[1], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*pow(u[2], 2.0)*v[1]*v[3]*x[3]*pow(sin(theta), 2.0) + pow(u[2], 2.0)*pow(v[3], 2.0)*x[1]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[1]*v[2]*x[3]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[1]*v[3]*x[2]*pow(sin(theta), 2.0) - 2.0*u[2]*u[3]*v[2]*v[3]*x[1]*pow(sin(theta), 2.0) - 2.0*u[2]*v[1]*x[2]*sin(theta)*cos(theta) + pow(u[3], 2.0)*pow(v[0], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*pow(u[3], 2.0)*v[0]*v[1]*x[0]*pow(sin(theta), 2.0) - pow(u[3], 2.0)*pow(v[1], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*pow(u[3], 2.0)*v[1]*v[2]*x[2]*pow(sin(theta), 2.0) + pow(u[3], 2.0)*pow(v[2], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*u[3]*v[1]*x[3]*sin(theta)*cos(theta) + x[1]*pow(cos(theta), 2.0), pow(u[0], 2.0)*pow(v[1], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[0], 2.0)*v[1]*v[2]*x[1]*pow(sin(theta), 2.0) - pow(u[0], 2.0)*pow(v[2], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[0], 2.0)*v[2]*v[3]*x[3]*pow(sin(theta), 2.0) + pow(u[0], 2.0)*pow(v[3], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*u[0]*u[1]*v[0]*v[1]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[0]*v[2]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[1]*v[2]*x[0]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[0]*v[1]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[0]*v[2]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[0]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[2]*pow(v[1], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*u[2]*pow(v[3], 2.0)*x[0]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[0]*v[2]*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[3]*v[0]*v[3]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[2]*v[3]*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*v[2]*x[0]*sin(theta)*cos(theta) + pow(u[1], 2.0)*pow(v[0], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[1], 2.0)*v[0]*v[2]*x[0]*pow(sin(theta), 2.0) - pow(u[1], 2.0)*pow(v[2], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[1], 2.0)*v[2]*v[3]*x[3]*pow(sin(theta), 2.0) + pow(u[1], 2.0)*pow(v[3], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*u[1]*u[2]*pow(v[0], 2.0)*x[1]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[0]*v[1]*x[0]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[1]*v[2]*x[2]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[1]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[1]*u[2]*pow(v[3], 2.0)*x[1]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[1]*v[2]*x[3]*pow(sin(theta), 2.0) - 2.0*u[1]*u[3]*v[1]*v[3]*x[2]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[2]*v[3]*x[1]*pow(sin(theta), 2.0) - 2.0*u[1]*v[2]*x[1]*sin(theta)*cos(theta) - pow(u[2], 2.0)*pow(v[0], 2.0)*x[2]*pow(sin(theta), 2.0) - pow(u[2], 2.0)*pow(v[1], 2.0)*x[2]*pow(sin(theta), 2.0) - pow(u[2], 2.0)*pow(v[3], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*u[2]*u[3]*pow(v[0], 2.0)*x[3]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[0]*v[3]*x[0]*pow(sin(theta), 2.0) - 2.0*u[2]*u[3]*pow(v[1], 2.0)*x[3]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[1]*v[3]*x[1]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[2]*v[3]*x[2]*pow(sin(theta), 2.0) + 2.0*u[2]*v[0]*x[0]*sin(theta)*cos(theta) + 2.0*u[2]*v[1]*x[1]*sin(theta)*cos(theta) + 2.0*u[2]*v[3]*x[3]*sin(theta)*cos(theta) + pow(u[3], 2.0)*pow(v[0], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[3], 2.0)*v[0]*v[2]*x[0]*pow(sin(theta), 2.0) + pow(u[3], 2.0)*pow(v[1], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*pow(u[3], 2.0)*v[1]*v[2]*x[1]*pow(sin(theta), 2.0) - pow(u[3], 2.0)*pow(v[2], 2.0)*x[2]*pow(sin(theta), 2.0) - 2.0*u[3]*v[2]*x[3]*sin(theta)*cos(theta) + x[2]*pow(cos(theta), 2.0), pow(u[0], 2.0)*pow(v[1], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*pow(u[0], 2.0)*v[1]*v[3]*x[1]*pow(sin(theta), 2.0) + pow(u[0], 2.0)*pow(v[2], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*pow(u[0], 2.0)*v[2]*v[3]*x[2]*pow(sin(theta), 2.0) - pow(u[0], 2.0)*pow(v[3], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[1]*v[0]*v[1]*x[3]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[0]*v[3]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[1]*v[1]*v[3]*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*u[2]*v[0]*v[2]*x[3]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[0]*v[3]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[2]*v[2]*v[3]*x[0]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[0]*v[1]*x[1]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[0]*v[2]*x[2]*pow(sin(theta), 2.0) + 2.0*u[0]*u[3]*v[0]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[0]*u[3]*pow(v[1], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*u[3]*pow(v[2], 2.0)*x[0]*pow(sin(theta), 2.0) - 2.0*u[0]*v[3]*x[0]*sin(theta)*cos(theta) + pow(u[1], 2.0)*pow(v[0], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*pow(u[1], 2.0)*v[0]*v[3]*x[0]*pow(sin(theta), 2.0) + pow(u[1], 2.0)*pow(v[2], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*pow(u[1], 2.0)*v[2]*v[3]*x[2]*pow(sin(theta), 2.0) - pow(u[1], 2.0)*pow(v[3], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*u[1]*u[2]*v[1]*v[2]*x[3]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[1]*v[3]*x[2]*pow(sin(theta), 2.0) + 2.0*u[1]*u[2]*v[2]*v[3]*x[1]*pow(sin(theta), 2.0) - 2.0*u[1]*u[3]*pow(v[0], 2.0)*x[1]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[0]*v[1]*x[0]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[1]*v[2]*x[2]*pow(sin(theta), 2.0) + 2.0*u[1]*u[3]*v[1]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[1]*u[3]*pow(v[2], 2.0)*x[1]*pow(sin(theta), 2.0) - 2.0*u[1]*v[3]*x[1]*sin(theta)*cos(theta) + pow(u[2], 2.0)*pow(v[0], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*pow(u[2], 2.0)*v[0]*v[3]*x[0]*pow(sin(theta), 2.0) + pow(u[2], 2.0)*pow(v[1], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*pow(u[2], 2.0)*v[1]*v[3]*x[1]*pow(sin(theta), 2.0) - pow(u[2], 2.0)*pow(v[3], 2.0)*x[3]*pow(sin(theta), 2.0) - 2.0*u[2]*u[3]*pow(v[0], 2.0)*x[2]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[0]*v[2]*x[0]*pow(sin(theta), 2.0) - 2.0*u[2]*u[3]*pow(v[1], 2.0)*x[2]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[1]*v[2]*x[1]*pow(sin(theta), 2.0) + 2.0*u[2]*u[3]*v[2]*v[3]*x[3]*pow(sin(theta), 2.0) - 2.0*u[2]*v[3]*x[2]*sin(theta)*cos(theta) - pow(u[3], 2.0)*pow(v[0], 2.0)*x[3]*pow(sin(theta), 2.0) - pow(u[3], 2.0)*pow(v[1], 2.0)*x[3]*pow(sin(theta), 2.0) - pow(u[3], 2.0)*pow(v[2], 2.0)*x[3]*pow(sin(theta), 2.0) + 2.0*u[3]*v[0]*x[0]*sin(theta)*cos(theta) + 2.0*u[3]*v[1]*x[1]*sin(theta)*cos(theta) + 2.0*u[3]*v[2]*x[2]*sin(theta)*cos(theta) + x[3]*pow(cos(theta), 2.0));
}